AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Timeout: 40

Parameters:
  DomainName:
    Type: String
    Description: Domain name
  HostedZoneId:
    Type: String
    Description: Hosted zone ID
  CFDistributionPriceClass:
    Type: String
    Default: PriceClass_All
    AllowedValues:
      - PriceClass_All
      - PriceClass_100
      - PriceClass_200
    Description: Price class for CloudFront distribution

Resources:
  VersioningTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VersioningApp
      AttributeDefinitions:
        - AttributeName: appName
          AttributeType: S
      KeySchema:
        - AttributeName: appName
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  VersioningFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: versioning.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          IS_LOCAL: "false"
          TABLE_NAME: !Ref VersioningTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref VersioningTable
      Events:
        CreateApp:
          Type: Api
          Properties:
            Path: /create
            Method: post
        GetVersion:
          Type: Api
          Properties:
            Path: /{app_name}/version
            Method: get
        BumpVersion:
          Type: Api
          Properties:
            Path: /{app_name}/bump
            Method: post
        SetVersion:
          Type: Api
          Properties:
            Path: /{app_name}/set
            Method: post

Outputs:
  ApiGatewayUrl:
    Description: "API Gateway URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"

  # CFOriginAccessIdentity:
  #   Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
  #   Properties:
  #     CloudFrontOriginAccessIdentityConfig:
  #       Comment: !Sub "${DomainName} CloudFront OAI"

  # LogBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub "logs.${DomainName}"
  #     BucketEncryption:
  #       ServerSideEncryptionConfiguration:
  #         - ServerSideEncryptionByDefault:
  #             SSEAlgorithm: AES256
  #     AccessControl: Private
  #     VersioningConfiguration:
  #       Status: Enabled
  #     PublicAccessBlockConfiguration:
  #       BlockPublicAcls: true
  #       IgnorePublicAcls: true
  #       BlockPublicPolicy: true
  #       RestrictPublicBuckets: true

  # WebsiteBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Ref DomainName
  #     BucketEncryption:
  #       ServerSideEncryptionConfiguration:
  #         - ServerSideEncryptionByDefault:
  #             SSEAlgorithm: AES256
  #     AccessControl: Private
  #     VersioningConfiguration:
  #       Status: Enabled
  #     PublicAccessBlockConfiguration:
  #       BlockPublicAcls: true
  #       IgnorePublicAcls: true
  #       BlockPublicPolicy: true
  #       RestrictPublicBuckets: true

  # WebsiteBucketPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     Bucket: !Ref WebsiteBucket
  #     PolicyDocument:
  #       Statement:
  #         - Effect: Allow
  #           Action: s3:GetObject
  #           Principal:
  #             CanonicalUser: !GetAtt CFOriginAccessIdentity.S3CanonicalUserId
  #           Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"

  # WebCertificate:
  #   Type: AWS::CertificateManager::Certificate
  #   Properties:
  #     DomainName: !Ref DomainName
  #     SubjectAlternativeNames:
  #       - !Sub "www.${DomainName}"
  #     ValidationMethod: DNS
  #     DomainValidationOptions:
  #       - DomainName: !Ref DomainName
  #         HostedZoneId: !Ref HostedZoneId
  #       - DomainName: !Sub "www.${DomainName}"
  #         HostedZoneId: !Ref HostedZoneId

  # CFDistribution:
  #   Type: AWS::CloudFront::Distribution
  #   DependsOn:
  #     - LogBucket
  #   Properties:
  #     DistributionConfig:
  #       Enabled: "true"
  #       Comment: !Sub "Distribution for ${DomainName}"
  #       HttpVersion: http2
  #       PriceClass: !Ref CFDistributionPriceClass
  #       DefaultRootObject: index.html
  #       Aliases:
  #         - !Ref DomainName
  #         - !Sub "www.${DomainName}"
  #       Origins:
  #         - Id: !Sub "S3-${DomainName}"
  #           DomainName: !Sub "${DomainName}.s3.amazonaws.com"
  #           S3OriginConfig:
  #             OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CFOriginAccessIdentity}"
  #       DefaultCacheBehavior:
  #         TargetOriginId: !Sub "S3-${DomainName}"
  #         Compress: true
  #         ForwardedValues:
  #           QueryString: false
  #           Headers:
  #             - Origin
  #           Cookies:
  #             Forward: none
  #         ViewerProtocolPolicy: redirect-to-https
  #       CustomErrorResponses:
  #         - ErrorCode: "403"
  #           ResponsePagePath: /404.html
  #           ResponseCode: "404"
  #           ErrorCachingMinTTL: "30"
  #       ViewerCertificate:
  #         AcmCertificateArn: !Ref WebCertificate
  #         SslSupportMethod: sni-only
  #         MinimumProtocolVersion: TLSv1.2_2019
  #       Logging:
  #         IncludeCookies: false
  #         Bucket: !Sub "logs.${DomainName}.s3.amazonaws.com"
  #         Prefix: cf-logs

  # DNSRecordSet:
  #   Type: AWS::Route53::RecordSetGroup
  #   Properties:
  #     Comment: !Sub "DNS records for ${DomainName}"
  #     HostedZoneId: !Ref HostedZoneId
  #     RecordSets:
  #       - Name: !Ref DomainName
  #         Type: A
  #         AliasTarget:
  #           DNSName: !GetAtt CFDistribution.DomainName
  #           EvaluateTargetHealth: false
  #           HostedZoneId: Z2FDTNDATAQYW2
  #       - Name: !Ref DomainName
  #         Type: AAAA
  #         AliasTarget:
  #           DNSName: !GetAtt CFDistribution.DomainName
  #           EvaluateTargetHealth: false
  #           HostedZoneId: Z2FDTNDATAQYW2
  #       - Name: !Sub "www.${DomainName}"
  #         Type: A
  #         AliasTarget:
  #           DNSName: !GetAtt CFDistribution.DomainName
  #           EvaluateTargetHealth: false
  #           HostedZoneId: Z2FDTNDATAQYW2
  #       - Name: !Sub "www.${DomainName}"
  #         Type: AAAA
  #         AliasTarget:
  #           DNSName: !GetAtt CFDistribution.DomainName
  #           EvaluateTargetHealth: false
  #           HostedZoneId: Z2FDTNDATAQYW2
