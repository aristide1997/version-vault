AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Timeout: 40

Resources:
  VersioningTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VersioningApp
      AttributeDefinitions:
        - AttributeName: appName
          AttributeType: S
      KeySchema:
        - AttributeName: appName
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  VersioningFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: versioning.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          IS_LOCAL: "false"
          TABLE_NAME: !Ref VersioningTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref VersioningTable
      Events:
        CreateApp:
          Type: Api
          Properties:
            Path: /create
            Method: post
        GetVersion:
          Type: Api
          Properties:
            Path: /{app_name}/version
            Method: get
        BumpVersion:
          Type: Api
          Properties:
            Path: /{app_name}/bump
            Method: post
        SetVersion:
          Type: Api
          Properties:
            Path: /{app_name}/set
            Method: post

  # S3 Bucket for Hosting Static Website
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: versionvault-dev-static-hosting-bucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # Origin Access Identity for CloudFront
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "OAI for ${AWS::StackName}"

  # CloudFront Distribution to serve the S3 content
  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: myS3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOAI}
        DefaultCacheBehavior:
          TargetOriginId: myS3Origin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
          Compress: true
          AllowedMethods:
            - HEAD
            - GET
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        Enabled: true
        Comment: !Sub ${AWS::StackName} S3-hosted website via CloudFront

Outputs:
  WebsiteURL:
    Description: "URL of the S3 bucket website"
    Value: !GetAtt WebsiteBucket.WebsiteURL
  S3BucketName:
    Description: "The name of the S3 bucket for static hosting"
    Value: !Ref WebsiteBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3BucketName"
  CloudFrontURL:
    Description: "CloudFront Distribution URL"
    Value: !GetAtt WebsiteDistribution.DomainName
  ApiGatewayUrl:
    Description: "API Gateway URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
